1.2 Programming (general)
1.3 Programming using Python
1.4 Basic input and output
1.9 Language history
1.10 Why whitespace matters
1.12 Variables and assignments
2.1 Objects
2.2 Numeric types: Floating-point
2.3 Arithmetic expressions
2.4 Python expressions
2.5 Division and modulo
2.6 Module basics
2.7 Math module
2.8 Function basics
3.1 String basics
3.2 List basics
3.3 Tuple basics
3.4 Set basics
3.5 Dictionary basics
3.6 Common data types summary
Indexing
3.7 Type conversions
3.8 Binary numbers
3.9 Representing text
3.10 String formatting
3.11 Alternative string formatting
4.1 If-else branches
4.2 Detecting equal values with branches
4.3 Comparing data types and common errors
4.5 Detecting ranges with branches
4.6 Detecting ranges using logical operators
4.7 Detecting ranges with gaps
4.8 Detecting multiple features with branches
4.9 Membership and identity operators
4.10 Order of evaluation
4.11 Code blocks and indentation
4.12 assert statements
5.1 User-defined function basics
5.2 Print functions
5.3 Dynamic typing
5.4 Reasons for defining functions
5.5 Writing mathematical functions
5.6 Function stubs
5.7 Functions are objects
5.8 Functions: Common errors
5.9 Scope of variables and functions
5.10 Namespaces and scope resolution
5.11 if __name__ == "__main__"
testing
5.12 Testing and assert statements
5.13 Help 
Using docstrings to document functions
6.1 Loops (general)
6.2 While loops
6.3 More while examples
6.4 Counting
6.5 For loops
6.6 Counting using the range() function
6.7 While vs. for loops
6.8 Nested loops
6.9 Developing programs incrementally
6.10 Break and continue
6.11 Loop else
6.12 enumerate
6.13 Functions with branches/loops'
7.1 Lists
7.2 List methods
7.3 Iterating over a list
7.4 List games
7.5 List nesting
7.6 List slicing
7.7 Loops modifying lists
7.8 List comprehensions
7.9 Sorting lists
7.10 Dictionaries
7.11 Dictionary methods
7.12 Iterating over a dictionary
7.13 Dictionary nesting
8.1 Function arguments
8.2 Keyword arguments
default parameter values
8.3 Arbitrary argument lists
8.4 Multiple function outputs
8.5 String slicing
8.6 Advanced string formatting
8.7 String methods
8.8 Splitting and joining strings
9.1 Recursive functions
9.2 Recursive algorithm: Search
9.3 Adding output statements for debugging
9.4 Creating a recursive function
9.5 Recursive math functions
9.6 Recursive exploration of all possibilities
9.7 Recursion: Additional resources
10.1 Reading files
10.2 Writing files
10.3 Interacting with file systems
10.4 Binary data
10.5 Command-line arguments and files
10.6 The 'with' statement
10.7 Comma separated values files